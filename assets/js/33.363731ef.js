(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{232:function(e,n,t){"use strict";t.r(n);var r=t(0),a=Object(r.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("/**")]),e._v(" "),t("ul",[t("li",[e._v("Retrieves the data (status) from the Inbound sheet.")]),e._v(" "),t("li",[e._v("@param {*} id")]),e._v(" "),t("li",[e._v('@param {*} approverEmail\n*/\nfunction getStatusInbound(id, approverEmail) {\nvar idColNum = getColumnNumber("Bound to Response ID", {\nrowNumber: 1,\nsheetObject: inboundSheet\n});\nvar emailColNum = getColumnNumber("Email Address", {\nrowNumber: 1,\nsheetObject: inboundSheet\n});\nvar idGrid = getColumnRange(idColNum, inboundSheet);\nvar emailGrid = getColumnRange(emailColNum, inboundSheet);\n// var indexNumber = idGrid.indexOf(id);\nvar attempt = 1;')])]),e._v(" "),t("p",[e._v("while (attempt < inboundSheet.getLastRow()) {\n/* Find id that matches */\nindexNumber = idGrid.indexOf(id);")]),e._v(" "),t("pre",[t("code",[e._v("/* If there is a match, continue */\nif (!(indexNumber + attempt)) {\n  break;\n}\n\n// console.log('idGrid: ' + idGrid);\n// console.log('indexNumber: ' + indexNumber + 'id: ' + id + 'approverEmail: ' + approverEmail);\n\nvar email = emailGrid[indexNumber]\n  .toString()\n  .toLowerCase()\n  .trim()\n  .replace(/(\\r\\n\\t|\\n|\\r\\t)/gm, \"\");\napproverEmail = approverEmail\n  .toString()\n  .toLowerCase()\n  .trim()\n  .replace(/(\\r\\n\\t|\\n|\\r\\t)/gm, \"\");\n\n// console.log('email: ' + email + '|  ' + 'approverEmail: ' + approverEmail + '|');\n\n/* If the approverEmail is a match to the real approver email, set the value */\nif (email === approverEmail) {\n  var statusCell =\n    columnToLetter(\n      getColumnNumber(\"Response Result\", {\n        rowNumber: 1,\n        sheetObject: inboundSheet\n      })\n    ) +\n    \"\" +\n    (indexNumber + attempt);\n  var result = inboundSheet.getRange(statusCell).getValue();\n\n  var commentsCell =\n    columnToLetter(\n      getColumnNumber(\"Comments\", {\n        rowNumber: 1,\n        sheetObject: inboundSheet\n      })\n    ) +\n    \"\" +\n    (indexNumber + attempt);\n  var comments = inboundSheet.getRange(commentsCell).getValue();\n\n  var timestampCell =\n    columnToLetter(\n      getColumnNumber(\"Timestamp\", {\n        rowNumber: 1,\n        sheetObject: inboundSheet\n      })\n    ) +\n    \"\" +\n    (indexNumber + attempt);\n  var timestamp = inboundSheet.getRange(timestampCell).getValue();\n\n  console.log(statusCell);\n\n  return {\n    status: result,\n    comments: comments,\n    timestamp: timestamp\n    // cell: {\n    //   status: statusCell,\n    //   comments: commentsCell,\n    //   timestamp: timestampCell\n    // }\n  };\n}\n\n/* Recalculates after failing to match */\nidGrid.splice(indexNumber, 1);\nemailGrid.splice(indexNumber, 1);\nattempt += 1;\n")])]),e._v(" "),t("p",[e._v("}")]),e._v(" "),t("p",[e._v("/* If the search fails, return nothing */\nreturn null;\n}")])])}),[],!1,null,null,null);n.default=a.exports}}]);